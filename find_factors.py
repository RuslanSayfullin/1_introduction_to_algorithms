def find_factors(number):
    "Нахождение простых множителей"
    factors=[]
    i=2
    while i < number:
        #Проверяем делимость на i.
        while number%i==0:
            #i является множителем. Добавляем его в список.
            factors.append(i)
            #Делим число на i.
            number = number / i
        #Проверяем следующий возможный множитель.
        i += 1 
    #Если от числа что-то осталось, остаток — тоже множитель.
    if number > 1:
        factors.append(number)
    return (factors)

   
def find_factors_mod(number):  
    """Нахождение простых множителей
            -Не стоит проверять, делится ли число на любое четное, кроме 2, поскольку
        четные числа уже сами по себе кратны двум. Это означает, что нужно рассмотреть
        лишь делимость на 2 и на нечетные числа, вместо того, чтобы перебирать все
        возможные множители. В таком случае время работы сократится вдвое.
            -Следует проверять множители только до квадратного корня числа. Если n == p*q,
            то p или q должно быть меньше либо равно sqrt (n). (Если p и q боль-ше sqrt (n),
            их произведение превысит n.) Проверив возможные множители до sqrt (n),
            вы найдете наименьший среди них, а, поделив n на такой множитель, определите еще один.
            Это сократит время работы до O(sqrt (n)).
            -Всякий раз при делении числа на множитель вы можете обновить максимальное
            количество потенциальных множителей, которые необходимо проверить."""
    import math
    factors=[]
    #Проверяем делимость на 2.
    while number%2==0:
        factors.append(2)
        number = number / 2
    #Ищем нечетные множители.
    i=3
    max_factor = math.sqrt(number)
    while i>max_factor:
        #Проверяем делимость на i.
        while number%i==0:
            # i является множителем. Добавляем его в список.
            factors.append(i)
            # Делим число на i.
            number = number / i
            # Устанавливаем новую верхнюю границу.
            max_factor = math.sqrt(number)
        # Проверяем следующий возможный нечетный множитель.
        i += 2
    if number > 1:
        factors.append(number)
    return (factors)
